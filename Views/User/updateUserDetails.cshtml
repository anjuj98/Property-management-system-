@model Property_rental_management_system.Models.Signup

@{
    ViewBag.Title = "updateUserDetails";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";

}
<!DOCTYPE html>
<html>
<head>
    <link href="~/Content/css/signup.css" rel="stylesheet" />
    <link href="~/Content/css/errorMessage.css" rel="stylesheet" />
    <link href="~/Content/css/background.css" rel="stylesheet" />
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
</head>
<body>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h2>Edit profile</h2>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", id = "firstname", onfocusout = "checkFirstName()" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control", id = "lastname", onfocusout = "checkLastName()" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Dateofbirth, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Dateofbirth, new { htmlAttributes = new { @class = "form-control", max = new DateTime(2010, 12, 31).ToString("yyyy-MM-dd") } })
                    @Html.ValidationMessageFor(model => model.Dateofbirth, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.RadioButtonFor(model => model.Gender, "M")
                    @Html.Label("Male")
                    @Html.RadioButtonFor(model => model.Gender, "F")
                    @Html.Label("Female")
                    @Html.RadioButtonFor(model => model.Gender, "O")
                    @Html.Label("Other")
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phonenumber, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phonenumber, new { htmlAttributes = new { @class = "form-control", id = "phone", onfocusout = "checkPhone()" } })
                    @Html.ValidationMessageFor(model => model.Phonenumber, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", id = "email", onfocusout = "checkEmail()" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { cols = 50, htmlAttributes = new { @class = "form-control", id = "address", onfocusout = "checkAddress()" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control", id = "state", onfocusout = "checkState()" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", id = "city", onfocusout = "checkCity()" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pincode, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pincode, new { htmlAttributes = new { @class = "form-control", id = "pincode", onfocusout = "checkPincode()" } })
                    @Html.ValidationMessageFor(model => model.Pincode, "", new { @class = "error-message text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-info" onclick="checkValidation()"/>
                </div>
            </div>
        </div>
    }


    <!-- Bootstrap Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">Update profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to save changes?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" id="modalSaveButton" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>
    <script src="~/Scripts/javascript/ProfileEdit.js"></script>
</body>
</html>

@section scripts {
    <script>
       $(document).ready(function () {
    $('form').submit(function (e) {
        e.preventDefault(); // Prevent form submission
        $('#exampleModal').modal('show');// Show the Bootstrap modal
        
    });

    $('#modalSaveButton').click(function () {
        // Perform AJAX request to update the details
        $.ajax({
            url: '@Url.Action("updateUserDetails", "User")',
            type: 'POST',
            data: $('form').serialize(),
            success: function (result) {
                // Redirect to the Viewuser page
                window.location.href = '@Url.Action("Userprofile", "User")';
            },
            error: function (xhr, status, error) {
                console.log(error);
            }
        });
    });
});
    </script>
}